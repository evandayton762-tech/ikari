{
  "version": 3,
  "sources": ["../../@shopify/hydrogen/src/seo/log-seo-tags.ts"],
  "sourcesContent": ["import type {CustomHeadTagObject} from './generate-seo-tags';\n\nexport default function Logger({headTags}: {headTags: CustomHeadTagObject[]}) {\n  logSeoTags(headTags);\n\n  return null;\n}\n\nconst headingStyle = 'text-transform: uppercase;';\nconst titleStyle =\n  'text-transform: uppercase; font-weight: bold; text-transform: uppercase;font-weight: bold';\n\nexport function logSeoTags(headTags: CustomHeadTagObject[]) {\n  console.log(' ');\n  console.log('%cSEO Meta Tags', `${titleStyle}`);\n  console.log(' ');\n\n  headTags.forEach((tag) => {\n    if (tag.tag === 'script') {\n      console.log(`%c• JSON LD `, headingStyle);\n\n      if (tag.children) {\n        try {\n          console.table(JSON.parse(tag.children), ['name', 'content']);\n        } catch {\n          console.log(tag.children);\n        }\n      }\n    } else {\n      console.log(`%c• ${tag.tag} `, headingStyle);\n\n      if (tag.children) {\n        if (typeof tag.children === 'string') {\n          console.log(`↳ ${tag.children}`);\n        } else {\n          try {\n            Object.entries(JSON.parse(tag.children)).map(([key, val]) =>\n              console.log(`↳ ${val}`),\n            );\n          } catch {\n            console.log(tag.children);\n          }\n        }\n      }\n\n      if (tag.props.property === 'og:image:url') {\n        const urlKey = tag.props.content as string;\n\n        fetchImage(urlKey)\n          .then((image) => {\n            const imageStyle = `font-size: 400px; padding: 10px; background: white url(${image}) no-repeat center; background-size: contain;`;\n\n            console.log(`%c• Share image preview`, headingStyle);\n            console.log('%c  ', imageStyle);\n            console.log(`↳ ${urlKey}`);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n\n      Object.entries(tag.props).map(([key, val]) => {\n        console.log(`↳ ${key} → ${val}`);\n      });\n    }\n    console.log(' ');\n  });\n}\n\nasync function fetchImage(url: string) {\n  const result = await fetch(url);\n  const data = await result.blob();\n  const buff = await data.arrayBuffer();\n  const base64String = arrayBufferToBase64(buff);\n\n  return `data:image/png;base64,${base64String}`;\n}\n\nfunction arrayBufferToBase64(buffer: ArrayBuffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n\n  for (let index = 0; index < len; index++) {\n    binary += String.fromCharCode(bytes[index]);\n  }\n\n  return btoa(binary);\n}\n"],
  "mappings": ";;;AAEe,SAAR,OAAwB,EAAC,SAAA,GAA8C;AAC5E,aAAW,QAAQ;AAEZ,SAAA;AACT;AAEA,IAAM,eAAe;AACrB,IAAM,aACJ;AAEK,SAAS,WAAW,UAAiC;AAC1D,UAAQ,IAAI,GAAG;AACf,UAAQ,IAAI,mBAAmB,GAAG,UAAU,EAAE;AAC9C,UAAQ,IAAI,GAAG;AAEN,WAAA,QAAQ,CAAC,QAAQ;AACpB,QAAA,IAAI,QAAQ,UAAU;AAChB,cAAA,IAAI,gBAAgB,YAAY;AAExC,UAAI,IAAI,UAAU;AACZ,YAAA;AACM,kBAAA,MAAM,KAAK,MAAM,IAAI,QAAQ,GAAG,CAAC,QAAQ,SAAS,CAAC;QAAA,QACrD;AACE,kBAAA,IAAI,IAAI,QAAQ;QAAA;MAC1B;IACF,OACK;AACL,cAAQ,IAAI,OAAO,IAAI,GAAG,KAAK,YAAY;AAE3C,UAAI,IAAI,UAAU;AACZ,YAAA,OAAO,IAAI,aAAa,UAAU;AACpC,kBAAQ,IAAI,KAAK,IAAI,QAAQ,EAAE;QAAA,OAC1B;AACD,cAAA;AACF,mBAAO,QAAQ,KAAK,MAAM,IAAI,QAAQ,CAAC,EAAE;cAAI,CAAC,CAAC,KAAK,GAAG,MACrD,QAAQ,IAAI,KAAK,GAAG,EAAE;YAAA;UACxB,QACM;AACE,oBAAA,IAAI,IAAI,QAAQ;UAAA;QAC1B;MACF;AAGE,UAAA,IAAI,MAAM,aAAa,gBAAgB;AACnC,cAAA,SAAS,IAAI,MAAM;AAEzB,mBAAW,MAAM,EACd,KAAK,CAAC,UAAU;AACT,gBAAA,aAAa,0DAA0D,KAAK;AAE1E,kBAAA,IAAI,2BAA2B,YAAY;AAC3C,kBAAA,IAAI,QAAQ,UAAU;AACtB,kBAAA,IAAI,KAAK,MAAM,EAAE;QAAA,CAC1B,EACA,MAAM,CAAC,QAAQ;AACd,kBAAQ,MAAM,GAAG;QAAA,CAClB;MAAA;AAGE,aAAA,QAAQ,IAAI,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM;AAC5C,gBAAQ,IAAI,KAAK,GAAG,MAAM,GAAG,EAAE;MAAA,CAChC;IAAA;AAEH,YAAQ,IAAI,GAAG;EAAA,CAChB;AACH;AAEA,eAAe,WAAW,KAAa;AAC/B,QAAA,SAAS,MAAM,MAAM,GAAG;AACxB,QAAA,OAAO,MAAM,OAAO,KAAK;AACzB,QAAA,OAAO,MAAM,KAAK,YAAY;AAC9B,QAAA,eAAe,oBAAoB,IAAI;AAE7C,SAAO,yBAAyB,YAAY;AAC9C;AAEA,SAAS,oBAAoB,QAAqB;AAChD,MAAI,SAAS;AACP,QAAA,QAAQ,IAAI,WAAW,MAAM;AACnC,QAAM,MAAM,MAAM;AAElB,WAAS,QAAQ,GAAG,QAAQ,KAAK,SAAS;AACxC,cAAU,OAAO,aAAa,MAAM,KAAK,CAAC;EAAA;AAG5C,SAAO,KAAK,MAAM;AACpB;",
  "names": []
}

{"version":3,"sources":["../../src/seo/log-seo-tags.ts"],"names":[],"mappings":"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","file":"log-seo-tags-IG37ONQ2.js","sourcesContent":["import type {CustomHeadTagObject} from './generate-seo-tags';\n\nexport default function Logger({headTags}: {headTags: CustomHeadTagObject[]}) {\n  logSeoTags(headTags);\n\n  return null;\n}\n\nconst headingStyle = 'text-transform: uppercase;';\nconst titleStyle =\n  'text-transform: uppercase; font-weight: bold; text-transform: uppercase;font-weight: bold';\n\nexport function logSeoTags(headTags: CustomHeadTagObject[]) {\n  console.log(' ');\n  console.log('%cSEO Meta Tags', `${titleStyle}`);\n  console.log(' ');\n\n  headTags.forEach((tag) => {\n    if (tag.tag === 'script') {\n      console.log(`%c• JSON LD `, headingStyle);\n\n      if (tag.children) {\n        try {\n          console.table(JSON.parse(tag.children), ['name', 'content']);\n        } catch {\n          console.log(tag.children);\n        }\n      }\n    } else {\n      console.log(`%c• ${tag.tag} `, headingStyle);\n\n      if (tag.children) {\n        if (typeof tag.children === 'string') {\n          console.log(`↳ ${tag.children}`);\n        } else {\n          try {\n            Object.entries(JSON.parse(tag.children)).map(([key, val]) =>\n              console.log(`↳ ${val}`),\n            );\n          } catch {\n            console.log(tag.children);\n          }\n        }\n      }\n\n      if (tag.props.property === 'og:image:url') {\n        const urlKey = tag.props.content as string;\n\n        fetchImage(urlKey)\n          .then((image) => {\n            const imageStyle = `font-size: 400px; padding: 10px; background: white url(${image}) no-repeat center; background-size: contain;`;\n\n            console.log(`%c• Share image preview`, headingStyle);\n            console.log('%c  ', imageStyle);\n            console.log(`↳ ${urlKey}`);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n\n      Object.entries(tag.props).map(([key, val]) => {\n        console.log(`↳ ${key} → ${val}`);\n      });\n    }\n    console.log(' ');\n  });\n}\n\nasync function fetchImage(url: string) {\n  const result = await fetch(url);\n  const data = await result.blob();\n  const buff = await data.arrayBuffer();\n  const base64String = arrayBufferToBase64(buff);\n\n  return `data:image/png;base64,${base64String}`;\n}\n\nfunction arrayBufferToBase64(buffer: ArrayBuffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n\n  for (let index = 0; index < len; index++) {\n    binary += String.fromCharCode(bytes[index]);\n  }\n\n  return btoa(binary);\n}\n"]}